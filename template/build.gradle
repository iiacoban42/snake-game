import com.github.spotbugs.SpotBugsTask

plugins {
    id 'org.springframework.boot' version '2.2.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'jacoco'

    // Code style
    id 'checkstyle'

    // PMD
    id 'pmd'

    // FindBugs / SpotBugs
    id "com.github.spotbugs" version "2.0.1"

    // JavaFX
    id "org.openjfx.javafxplugin" version "0.0.8"
}

group = 'com.snake.game'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = 13

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

repositories {
    jcenter()
    mavenLocal()
    mavenCentral()
    maven { url "https://plugins.gradle.org/m2/" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    jcenter()
    google()
}

test {
    useJUnitPlatform()

    jacoco {
        enabled = true
        includes = []
        excludes = []
    }
}

dependencies {
    testImplementation('org.junit.jupiter:junit-jupiter:5.5.2')
    spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.7.1'
    compile group: 'com.mashape.unirest', name: 'unirest-java', version: '1.4.9'
    compile group: 'commons-logging', name: 'commons-logging', version: '1.2'

    compile "com.badlogicgames.gdx:gdx-backend-lwjgl:1.9.10"
    compile "com.badlogicgames.gdx:gdx-platform:1.9.10:natives-desktop"
    compile "com.badlogicgames.gdx:gdx-box2d-platform:1.9.10:natives-desktop"
    compile group: 'com.mashape.unirest', name: 'unirest-java', version: '1.4.9'
    compile group: 'commons-logging', name: 'commons-logging', version: '1.2'

    compile "com.badlogicgames.gdx:gdx:1.9.10"
    compile "com.badlogicgames.gdx:gdx-box2d:1.9.10"
}


jacocoTestCoverageVerification {
    violationRules {
        rule {
            enabled = true
            element = 'CLASS'
            includes = []
            excludes = []
            limit {
                counter = 'LINE'
                value = 'TOTALCOUNT'
                maximum = 0.3
            }
        }
    }
}

jacocoTestReport {
    reports {
        xml {
            enabled true // coveralls plugin depends on xml format report
        }

        html {
            enabled true
        }
    }

    test {
        jacoco {
            destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
            excludes = ["src/**"] // <-- does not work
            // excludes = ["projecteuler"]
        }
    }
}

jacoco {
    toolVersion = "0.8.5"
}

checkstyle {
    toolVersion "8.25"
    configFile = rootProject.file('config/checkstyle/checkstyle.xml')
}

pmd{
}

spotbugs {
    sourceSets = [sourceSets.main]
    toolVersion = '4.0.0-beta4'
    ignoreFailures = false
    effort = "default"
    reportLevel = "high"
    visitors = ["FindSqlInjection", "SwitchFallthrough"]
    excludeFilter = file("$rootProject.projectDir/config/spotbugs/excludeFilter.xml")
}

tasks.withType(SpotBugsTask) {
    reports.xml.enabled = false
    reports.html.enabled = true
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}

javafx {
    modules = ['javafx.controls', 'javafx.fxml']
    version = 11
}


